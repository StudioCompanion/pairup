generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

model User {
  // Default entry stuff
  id                  String    @id @default(cuid())
  createdAt           DateTime  @default(now())
  // Account details
  email               String    @unique
  password            String
  // what's their role? Probably a pairer
  role                Role      @default(PAIRER)
  // Unique user ID
  userId              String    @unique @default(uuid())
  // Verification
  verified            Boolean   @default(false)
  verificationCode    String
  verificationTimeout String
  // Recovery
  resetToken          String    @default("")
  // Used to rotate JWTs on a user level
  personalKey         String
  // Sessions related to the pairer
  sessions            Session[]
}

model Session {
  // default entry stuff
  id          String        @id @default(cuid())
  createdAt   DateTime      @default(now())
  // Pairer
  pairer      User          @relation(fields: [pairerId], references: [userId])
  pairerId    String
  // Pairee
  firstName   String
  lastName    String        @default("")
  email       String
  jobTitle    String        @default("")
  portfolio   String        @default("")
  timezone    String
  appointment String
  subjects    String[]
  status      SessionStatus @default(ACTIVE)
  // Messages
  messages    Message[]
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  message   String
  // Session
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
}

enum SessionStatus {
  ACTIVE
  CANCELLED
  COMPLETE
}

enum Role {
  PAIRER
  PAIREE
}
